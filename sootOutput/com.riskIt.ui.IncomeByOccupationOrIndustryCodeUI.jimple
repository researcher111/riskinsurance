public class com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI extends java.lang.Object implements com.riskIt.interfaces.StartInterface
{
    java.util.Scanner in;
    java.util.HashMap occupationMap;
    java.util.HashMap industryMap;
    com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface calc;
    double result;
    java.text.DecimalFormat myFormatter;
    java.lang.String type;
    java.lang.String fillData;

    public void <init>(java.lang.String)
    {
        com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI this;
        java.lang.String type, temp$6, temp$7, temp$9, temp$10;
        java.util.Scanner temp$0;
        java.io.InputStream temp$1;
        java.util.HashMap temp$2, temp$3;
        com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface temp$4;
        java.text.DecimalFormat temp$5;
        boolean temp$8;

        this := @this: com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI;
        type := @parameter0: java.lang.String;
        specialinvoke this.<java.lang.Object: void <init>()>();
        temp$0 = new java.util.Scanner;
        temp$1 = <java.lang.System: java.io.InputStream in>;
        specialinvoke temp$0.<java.util.Scanner: void <init>(java.io.InputStream)>(temp$1);
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.Scanner in> = temp$0;
        temp$2 = null;
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap occupationMap> = temp$2;
        temp$3 = null;
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap industryMap> = temp$3;
        temp$4 = null;
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface calc> = temp$4;
        temp$5 = new java.text.DecimalFormat;
        specialinvoke temp$5.<java.text.DecimalFormat: void <init>(java.lang.String)>("$###,###,###.00");
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.text.DecimalFormat myFormatter> = temp$5;
        if type != null goto label0;

        goto label1;

     label0:
        nop;
        temp$6 = virtualinvoke type.<java.lang.String: java.lang.String trim()>();
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.lang.String type> = temp$6;
        goto label2;

     label1:
        nop;
        temp$7 = "income";
        type = temp$7;

     label2:
        nop;
        temp$8 = virtualinvoke type.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("income");
        if temp$8 == 0 goto label4;

        goto label3;

     label3:
        nop;
        temp$9 = "income";
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.lang.String fillData> = temp$9;
        goto label5;

     label4:
        nop;
        temp$10 = "weekly wage";
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.lang.String fillData> = temp$10;

     label5:
        nop;
        return;
    }

    public void start()
    {
        com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI this;
        int mainChoice, occupationChoice, industryChoice, temp$1, temp$2, temp$9, temp$10, temp$11, temp$20, temp$43, temp$44, temp$45, temp$46, temp$55, temp$78, temp$79, temp$80;
        java.io.PrintStream temp$0, temp$21, temp$32, temp$56, temp$67;
        java.util.HashMap temp$3, temp$5, temp$6, temp$8, temp$24, temp$35, temp$59, temp$70;
        com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface temp$4, temp$7, temp$12, temp$15, temp$17, temp$47, temp$50, temp$52;
        java.lang.String temp$13, temp$23, temp$27, temp$30, temp$31, temp$34, temp$38, temp$41, temp$42, temp$48, temp$58, temp$62, temp$65, temp$66, temp$69, temp$73, temp$76, temp$77;
        boolean temp$14, temp$49;
        double temp$16, temp$18, temp$19, temp$29, temp$40, temp$51, temp$53, temp$54, temp$64, temp$75;
        java.lang.StringBuffer temp$22, temp$33, temp$57, temp$68;
        java.lang.Integer temp$25, temp$36, temp$60, temp$71;
        java.lang.Object temp$26, temp$37, temp$61, temp$72;
        java.text.DecimalFormat temp$28, temp$39, temp$63, temp$74;

        this := @this: com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI;
        mainChoice = 0;
        occupationChoice = 0;
        industryChoice = 0;

     label0:
        nop;
        virtualinvoke this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: void displayMainMenu()>();
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("Please enter a selection 1 ~ 5");
        temp$1 = virtualinvoke this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: int mainMenu()>();
        mainChoice = temp$1;
        if mainChoice == 5 goto label1;

        goto label2;

     label1:
        nop;
        temp$2 = 0;
        mainChoice = temp$2;
        return;

     label2:
        nop;
        temp$3 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap occupationMap>;
        if temp$3 == null goto label3;

        goto label4;

     label3:
        nop;
        temp$4 = staticinvoke <com.riskIt.util.Factory: com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface getCalculateByOccupationOrIndustryCode()>();
        temp$5 = interfaceinvoke temp$4.<com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface: java.util.HashMap getOccupationCodeAndNameMap()>();
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap occupationMap> = temp$5;

     label4:
        nop;
        temp$6 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap industryMap>;
        if temp$6 == null goto label5;

        goto label6;

     label5:
        nop;
        temp$7 = staticinvoke <com.riskIt.util.Factory: com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface getCalculateByOccupationOrIndustryCode()>();
        temp$8 = interfaceinvoke temp$7.<com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface: java.util.HashMap getIndustryCodeAndNameMap()>();
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap industryMap> = temp$8;

     label6:
        nop;
        if mainChoice == 1 goto label7;

        goto label21;

     label7:
        nop;

     label8:
        nop;
        temp$9 = virtualinvoke this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: int OccupationCodeMenu()>();
        occupationChoice = temp$9;
        if occupationChoice == -2 goto label9;

        goto label10;

     label9:
        nop;
        temp$10 = 0;
        mainChoice = temp$10;
        return;

     label10:
        nop;
        if occupationChoice == -1 goto label11;

        goto label12;

     label11:
        nop;
        temp$11 = 0;
        mainChoice = temp$11;
        goto label19;

     label12:
        nop;
        temp$12 = staticinvoke <com.riskIt.util.Factory: com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface getCalculateByOccupationOrIndustryCode()>();
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface calc> = temp$12;
        temp$13 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.lang.String type>;
        temp$14 = virtualinvoke temp$13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("income");
        if temp$14 == 0 goto label14;

        goto label13;

     label13:
        nop;
        temp$15 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface calc>;
        temp$16 = interfaceinvoke temp$15.<com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface: double calculateIncomeByOccupationCode(int)>(occupationChoice);
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: double result> = temp$16;
        goto label15;

     label14:
        nop;
        temp$17 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface calc>;
        temp$18 = interfaceinvoke temp$17.<com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface: double calculateWeeklyWageByOccupationCode(int)>(occupationChoice);
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: double result> = temp$18;

     label15:
        nop;
        temp$19 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: double result>;
        temp$20 = temp$19 cmpg 0.0;
        if temp$20 > 0 goto label17;

        goto label16;

     label16:
        nop;
        temp$21 = <java.lang.System: java.io.PrintStream out>;
        temp$22 = new java.lang.StringBuffer;
        specialinvoke temp$22.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("\nAverage ");
        temp$23 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.lang.String fillData>;
        virtualinvoke temp$22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$23);
        virtualinvoke temp$22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" for occupation code ");
        virtualinvoke temp$22.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(occupationChoice);
        virtualinvoke temp$22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" : ");
        temp$24 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap occupationMap>;
        temp$25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(occupationChoice);
        temp$26 = virtualinvoke temp$24.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(temp$25);
        temp$27 = (java.lang.String) temp$26;
        virtualinvoke temp$22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$27);
        virtualinvoke temp$22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" is not available.  Actual value is ");
        temp$28 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.text.DecimalFormat myFormatter>;
        temp$29 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: double result>;
        temp$30 = virtualinvoke temp$28.<java.text.DecimalFormat: java.lang.String format(double)>(temp$29);
        virtualinvoke temp$22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$30);
        virtualinvoke temp$22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(".\n");
        temp$31 = virtualinvoke temp$22.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$21.<java.io.PrintStream: void println(java.lang.String)>(temp$31);
        goto label18;

     label17:
        nop;
        temp$32 = <java.lang.System: java.io.PrintStream out>;
        temp$33 = new java.lang.StringBuffer;
        specialinvoke temp$33.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("\nAverage ");
        temp$34 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.lang.String fillData>;
        virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$34);
        virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" for occupation code ");
        virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(occupationChoice);
        virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" : ");
        temp$35 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap occupationMap>;
        temp$36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(occupationChoice);
        temp$37 = virtualinvoke temp$35.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(temp$36);
        temp$38 = (java.lang.String) temp$37;
        virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$38);
        virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" is ");
        temp$39 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.text.DecimalFormat myFormatter>;
        temp$40 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: double result>;
        temp$41 = virtualinvoke temp$39.<java.text.DecimalFormat: java.lang.String format(double)>(temp$40);
        virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$41);
        virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(".\n");
        temp$42 = virtualinvoke temp$33.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$32.<java.io.PrintStream: void println(java.lang.String)>(temp$42);

     label18:
        nop;
        temp$43 = 1;
        mainChoice = temp$43;

     label19:
        nop;
        nop;
        if mainChoice == 1 goto label8;

        goto label20;

     label20:
        nop;

     label21:
        nop;
        if mainChoice == 2 goto label22;

        goto label36;

     label22:
        nop;

     label23:
        nop;
        temp$44 = virtualinvoke this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: int IndustryCodeMenu()>();
        industryChoice = temp$44;
        if industryChoice == -2 goto label24;

        goto label25;

     label24:
        nop;
        temp$45 = 0;
        mainChoice = temp$45;
        return;

     label25:
        nop;
        if industryChoice == -1 goto label26;

        goto label27;

     label26:
        nop;
        temp$46 = 0;
        mainChoice = temp$46;
        goto label34;

     label27:
        nop;
        temp$47 = staticinvoke <com.riskIt.util.Factory: com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface getCalculateByOccupationOrIndustryCode()>();
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface calc> = temp$47;
        temp$48 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.lang.String type>;
        temp$49 = virtualinvoke temp$48.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("income");
        if temp$49 == 0 goto label29;

        goto label28;

     label28:
        nop;
        temp$50 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface calc>;
        temp$51 = interfaceinvoke temp$50.<com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface: double calculateIncomeByIndustryCode(int)>(industryChoice);
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: double result> = temp$51;
        goto label30;

     label29:
        nop;
        temp$52 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface calc>;
        temp$53 = interfaceinvoke temp$52.<com.riskIt.interfaces.CalculateByOccupationOrIndustryCodeInterface: double calculateWeeklyWageByIndustryCode(int)>(industryChoice);
        this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: double result> = temp$53;

     label30:
        nop;
        temp$54 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: double result>;
        temp$55 = temp$54 cmpg 0.0;
        if temp$55 > 0 goto label32;

        goto label31;

     label31:
        nop;
        temp$56 = <java.lang.System: java.io.PrintStream out>;
        temp$57 = new java.lang.StringBuffer;
        specialinvoke temp$57.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("\nAverage ");
        temp$58 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.lang.String fillData>;
        virtualinvoke temp$57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$58);
        virtualinvoke temp$57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" for industry code ");
        virtualinvoke temp$57.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(industryChoice);
        virtualinvoke temp$57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" : ");
        temp$59 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap industryMap>;
        temp$60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(industryChoice);
        temp$61 = virtualinvoke temp$59.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(temp$60);
        temp$62 = (java.lang.String) temp$61;
        virtualinvoke temp$57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$62);
        virtualinvoke temp$57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" is not available.  Actual value is ");
        temp$63 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.text.DecimalFormat myFormatter>;
        temp$64 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: double result>;
        temp$65 = virtualinvoke temp$63.<java.text.DecimalFormat: java.lang.String format(double)>(temp$64);
        virtualinvoke temp$57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$65);
        virtualinvoke temp$57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(".\n");
        temp$66 = virtualinvoke temp$57.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$56.<java.io.PrintStream: void println(java.lang.String)>(temp$66);
        goto label33;

     label32:
        nop;
        temp$67 = <java.lang.System: java.io.PrintStream out>;
        temp$68 = new java.lang.StringBuffer;
        specialinvoke temp$68.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("\nAverage ");
        temp$69 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.lang.String fillData>;
        virtualinvoke temp$68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$69);
        virtualinvoke temp$68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" for industry code ");
        virtualinvoke temp$68.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(industryChoice);
        virtualinvoke temp$68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" : ");
        temp$70 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap industryMap>;
        temp$71 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(industryChoice);
        temp$72 = virtualinvoke temp$70.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(temp$71);
        temp$73 = (java.lang.String) temp$72;
        virtualinvoke temp$68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$73);
        virtualinvoke temp$68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" is ");
        temp$74 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.text.DecimalFormat myFormatter>;
        temp$75 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: double result>;
        temp$76 = virtualinvoke temp$74.<java.text.DecimalFormat: java.lang.String format(double)>(temp$75);
        virtualinvoke temp$68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$76);
        virtualinvoke temp$68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(".\n");
        temp$77 = virtualinvoke temp$68.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$67.<java.io.PrintStream: void println(java.lang.String)>(temp$77);

     label33:
        nop;
        temp$78 = 2;
        mainChoice = temp$78;

     label34:
        nop;
        nop;
        if mainChoice == 2 goto label23;

        goto label35;

     label35:
        nop;

     label36:
        nop;
        if mainChoice == 3 goto label37;

        goto label38;

     label37:
        nop;
        virtualinvoke this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: void displayOccupationMap()>();
        temp$79 = 0;
        mainChoice = temp$79;

     label38:
        nop;
        if mainChoice == 4 goto label39;

        goto label40;

     label39:
        nop;
        virtualinvoke this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: void displayIndustryMap()>();
        temp$80 = 0;
        mainChoice = temp$80;

     label40:
        nop;
        nop;
        goto label0;

        return;
    }

    private final int mainMenu()
    {
        com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI this;
        int returnValue, temp$3;
        java.util.Scanner temp$0, temp$2, temp$10;
        boolean temp$1;
        java.io.PrintStream temp$4, temp$7, temp$8, temp$13;
        java.lang.StringBuffer temp$5, temp$9;
        java.lang.String temp$6, temp$11, temp$12;

        this := @this: com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI;
        returnValue = 0;

     label0:
        nop;
        temp$0 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.Scanner in>;
        temp$1 = virtualinvoke temp$0.<java.util.Scanner: boolean hasNextInt()>();
        if temp$1 == 0 goto label5;

        goto label1;

     label1:
        nop;
        temp$2 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.Scanner in>;
        temp$3 = virtualinvoke temp$2.<java.util.Scanner: int nextInt()>();
        returnValue = temp$3;
        if returnValue < 1 goto label3;

        goto label2;

     label2:
        nop;
        if returnValue > 5 goto label3;

        goto label4;

        goto label4;

     label3:
        nop;
        virtualinvoke this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: void displayMainMenu()>();
        temp$4 = <java.lang.System: java.io.PrintStream out>;
        temp$5 = new java.lang.StringBuffer;
        specialinvoke temp$5.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(returnValue);
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" is an invalid selection.");
        temp$6 = virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$4.<java.io.PrintStream: void println(java.lang.String)>(temp$6);
        temp$7 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$7.<java.io.PrintStream: void println(java.lang.String)>("Please enter a selection 1 ~ 5: ");

     label4:
        nop;
        goto label6;

     label5:
        nop;
        virtualinvoke this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: void displayMainMenu()>();
        temp$8 = <java.lang.System: java.io.PrintStream out>;
        temp$9 = new java.lang.StringBuffer;
        specialinvoke temp$9.<java.lang.StringBuffer: void <init>()>();
        temp$10 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.Scanner in>;
        temp$11 = virtualinvoke temp$10.<java.util.Scanner: java.lang.String next()>();
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$11);
        virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" is an invalid selection.");
        temp$12 = virtualinvoke temp$9.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$8.<java.io.PrintStream: void println(java.lang.String)>(temp$12);
        temp$13 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$13.<java.io.PrintStream: void println(java.lang.String)>("Please enter a selection 1 ~ 5");

     label6:
        nop;
        nop;
        if returnValue < 1 goto label0;

        goto label7;

     label7:
        nop;
        if returnValue > 5 goto label0;

        goto label8;

        goto label8;

     label8:
        nop;
        return returnValue;
    }

    private final int OccupationCodeMenu()
    {
        com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI this;
        int returnValue, temp$3, temp$5, temp$13, temp$16, temp$19, temp$23, temp$25;
        java.util.Scanner temp$0, temp$2, temp$9;
        boolean temp$1, temp$12, temp$15, temp$18;
        java.util.HashMap temp$4, temp$24;
        java.io.PrintStream temp$6, temp$20;
        java.lang.StringBuffer temp$7, temp$21;
        java.lang.String temp$8, occupationString, temp$10, temp$11, temp$14, temp$17, temp$22;

        this := @this: com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI;
        returnValue = 0;

     label0:
        nop;
        virtualinvoke this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: void displayOccupationMenu()>();
        temp$0 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.Scanner in>;
        temp$1 = virtualinvoke temp$0.<java.util.Scanner: boolean hasNextInt()>();
        if temp$1 == 0 goto label5;

        goto label1;

     label1:
        nop;
        temp$2 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.Scanner in>;
        temp$3 = virtualinvoke temp$2.<java.util.Scanner: int nextInt()>();
        returnValue = temp$3;
        if returnValue < 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$4 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap occupationMap>;
        temp$5 = virtualinvoke temp$4.<java.util.HashMap: int size()>();
        if returnValue > temp$5 goto label3;

        goto label4;

        goto label4;

     label3:
        nop;
        temp$6 = <java.lang.System: java.io.PrintStream out>;
        temp$7 = new java.lang.StringBuffer;
        specialinvoke temp$7.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(returnValue);
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" is an invalid selection.");
        temp$8 = virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$6.<java.io.PrintStream: void println(java.lang.String)>(temp$8);

     label4:
        nop;
        goto label13;

     label5:
        nop;
        temp$9 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.Scanner in>;
        temp$10 = virtualinvoke temp$9.<java.util.Scanner: java.lang.String next()>();
        occupationString = temp$10;
        temp$11 = virtualinvoke occupationString.<java.lang.String: java.lang.String trim()>();
        temp$12 = virtualinvoke temp$11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("list");
        if temp$12 == 0 goto label7;

        goto label6;

     label6:
        nop;
        virtualinvoke this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: void displayOccupationMap()>();
        temp$13 = -1;
        returnValue = temp$13;
        goto label12;

     label7:
        nop;
        temp$14 = virtualinvoke occupationString.<java.lang.String: java.lang.String trim()>();
        temp$15 = virtualinvoke temp$14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("return");
        if temp$15 == 0 goto label9;

        goto label8;

     label8:
        nop;
        temp$16 = -1;
        return temp$16;

     label9:
        nop;
        temp$17 = virtualinvoke occupationString.<java.lang.String: java.lang.String trim()>();
        temp$18 = virtualinvoke temp$17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("exit");
        if temp$18 == 0 goto label11;

        goto label10;

     label10:
        nop;
        temp$19 = -2;
        return temp$19;

     label11:
        nop;
        temp$20 = <java.lang.System: java.io.PrintStream out>;
        temp$21 = new java.lang.StringBuffer;
        specialinvoke temp$21.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(occupationString);
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" is an invalid selection.");
        temp$22 = virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$20.<java.io.PrintStream: void println(java.lang.String)>(temp$22);
        temp$23 = -1;
        returnValue = temp$23;

     label12:
        nop;

     label13:
        nop;
        nop;
        if returnValue < 0 goto label0;

        goto label14;

     label14:
        nop;
        temp$24 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap occupationMap>;
        temp$25 = virtualinvoke temp$24.<java.util.HashMap: int size()>();
        if returnValue > temp$25 goto label0;

        goto label15;

        goto label15;

     label15:
        nop;
        return returnValue;
    }

    private final int IndustryCodeMenu()
    {
        com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI this;
        int returnValue, temp$3, temp$5, temp$13, temp$16, temp$19, temp$23, temp$25;
        java.util.Scanner temp$0, temp$2, temp$9;
        boolean temp$1, temp$12, temp$15, temp$18;
        java.util.HashMap temp$4, temp$24;
        java.io.PrintStream temp$6, temp$20;
        java.lang.StringBuffer temp$7, temp$21;
        java.lang.String temp$8, industryString, temp$10, temp$11, temp$14, temp$17, temp$22;

        this := @this: com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI;
        returnValue = 0;

     label0:
        nop;
        virtualinvoke this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: void displayIndustryMenu()>();
        temp$0 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.Scanner in>;
        temp$1 = virtualinvoke temp$0.<java.util.Scanner: boolean hasNextInt()>();
        if temp$1 == 0 goto label5;

        goto label1;

     label1:
        nop;
        temp$2 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.Scanner in>;
        temp$3 = virtualinvoke temp$2.<java.util.Scanner: int nextInt()>();
        returnValue = temp$3;
        if returnValue < 0 goto label3;

        goto label2;

     label2:
        nop;
        temp$4 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap industryMap>;
        temp$5 = virtualinvoke temp$4.<java.util.HashMap: int size()>();
        if returnValue > temp$5 goto label3;

        goto label4;

        goto label4;

     label3:
        nop;
        temp$6 = <java.lang.System: java.io.PrintStream out>;
        temp$7 = new java.lang.StringBuffer;
        specialinvoke temp$7.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(returnValue);
        virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" is an invalid selection.");
        temp$8 = virtualinvoke temp$7.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$6.<java.io.PrintStream: void println(java.lang.String)>(temp$8);

     label4:
        nop;
        goto label13;

     label5:
        nop;
        temp$9 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.Scanner in>;
        temp$10 = virtualinvoke temp$9.<java.util.Scanner: java.lang.String next()>();
        industryString = temp$10;
        temp$11 = virtualinvoke industryString.<java.lang.String: java.lang.String trim()>();
        temp$12 = virtualinvoke temp$11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("list");
        if temp$12 == 0 goto label7;

        goto label6;

     label6:
        nop;
        virtualinvoke this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: void displayIndustryMap()>();
        temp$13 = -1;
        returnValue = temp$13;
        goto label12;

     label7:
        nop;
        temp$14 = virtualinvoke industryString.<java.lang.String: java.lang.String trim()>();
        temp$15 = virtualinvoke temp$14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("return");
        if temp$15 == 0 goto label9;

        goto label8;

     label8:
        nop;
        temp$16 = -1;
        return temp$16;

     label9:
        nop;
        temp$17 = virtualinvoke industryString.<java.lang.String: java.lang.String trim()>();
        temp$18 = virtualinvoke temp$17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("exit");
        if temp$18 == 0 goto label11;

        goto label10;

     label10:
        nop;
        temp$19 = -2;
        return temp$19;

     label11:
        nop;
        temp$20 = <java.lang.System: java.io.PrintStream out>;
        temp$21 = new java.lang.StringBuffer;
        specialinvoke temp$21.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(industryString);
        virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" is an invalid selection.");
        temp$22 = virtualinvoke temp$21.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$20.<java.io.PrintStream: void println(java.lang.String)>(temp$22);
        temp$23 = -1;
        returnValue = temp$23;

     label12:
        nop;

     label13:
        nop;
        nop;
        if returnValue < 0 goto label0;

        goto label14;

     label14:
        nop;
        temp$24 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap industryMap>;
        temp$25 = virtualinvoke temp$24.<java.util.HashMap: int size()>();
        if returnValue > temp$25 goto label0;

        goto label15;

        goto label15;

     label15:
        nop;
        return returnValue;
    }

    private final void displayMainMenu()
    {
        com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI this;
        java.io.PrintStream temp$0, temp$4, temp$8, temp$9, temp$10;
        java.lang.StringBuffer temp$1, temp$5;
        java.lang.String temp$2, temp$3, temp$6, temp$7;

        this := @this: com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI;
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        temp$1 = new java.lang.StringBuffer;
        specialinvoke temp$1.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("[1] Select an Occupation Code to display average ");
        temp$2 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.lang.String fillData>;
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$2);
        virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" for that occupation code");
        temp$3 = virtualinvoke temp$1.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>(temp$3);
        temp$4 = <java.lang.System: java.io.PrintStream out>;
        temp$5 = new java.lang.StringBuffer;
        specialinvoke temp$5.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("[2] Select an Industry Code to display average ");
        temp$6 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.lang.String fillData>;
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$6);
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" for that industry code.");
        temp$7 = virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$4.<java.io.PrintStream: void println(java.lang.String)>(temp$7);
        temp$8 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$8.<java.io.PrintStream: void println(java.lang.String)>("[3] Display all Occupation codes associated occupation names.");
        temp$9 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$9.<java.io.PrintStream: void println(java.lang.String)>("[4] Display all Industry codes and associated industry names.");
        temp$10 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$10.<java.io.PrintStream: void println(java.lang.String)>("[5] Exit");
        return;
    }

    private final void displayOccupationMenu()
    {
        com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI this;
        java.io.PrintStream temp$0, temp$1;

        this := @this: com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI;
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("Enter an Occupation code, or \'list\' for the list of Occupation codes and descriptions.");
        temp$1 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$1.<java.io.PrintStream: void println(java.lang.String)>("Enter \'return\' to return to the Occupation and Industry Code menu, or \'exit\' to return to the main menu.");
        return;
    }

    private final void displayIndustryMenu()
    {
        com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI this;
        java.io.PrintStream temp$0, temp$1;

        this := @this: com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI;
        temp$0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$0.<java.io.PrintStream: void println(java.lang.String)>("Enter a Industry code, or \'list\' for the list of Industry codes and descriptions.");
        temp$1 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$1.<java.io.PrintStream: void println(java.lang.String)>("Enter \'return\' to return to the Occupation and Industry Code menu, or \'exit\' to return to the main menu.");
        return;
    }

    private final void displayOccupationMap()
    {
        com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI this;
        int i, temp$1, temp$11, temp$12;
        java.util.HashMap temp$0, temp$6;
        java.lang.String stringToInsert, temp$3, temp$9, temp$10;
        java.lang.StringBuffer temp$2, temp$5;
        java.io.PrintStream temp$4, temp$13;
        java.lang.Integer temp$7;
        java.lang.Object temp$8;

        this := @this: com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI;
        i = 0;

     label0:
        nop;
        temp$0 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap occupationMap>;
        temp$1 = virtualinvoke temp$0.<java.util.HashMap: int size()>();
        if i < temp$1 goto label1;

        goto label4;

     label1:
        nop;
        stringToInsert = " : ";
        if i < 10 goto label2;

        goto label3;

     label2:
        nop;
        temp$2 = new java.lang.StringBuffer;
        specialinvoke temp$2.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" ");
        virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(stringToInsert);
        temp$3 = virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.String toString()>();
        stringToInsert = temp$3;

     label3:
        nop;
        temp$4 = <java.lang.System: java.io.PrintStream out>;
        temp$5 = new java.lang.StringBuffer;
        specialinvoke temp$5.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Occupation code ");
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i);
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(stringToInsert);
        temp$6 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap occupationMap>;
        temp$7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i);
        temp$8 = virtualinvoke temp$6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(temp$7);
        temp$9 = (java.lang.String) temp$8;
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$9);
        temp$10 = virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$4.<java.io.PrintStream: void println(java.lang.String)>(temp$10);
        nop;
        temp$11 = i;
        temp$12 = temp$11 + 1;
        i = temp$12;
        goto label0;

     label4:
        nop;
        temp$13 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$13.<java.io.PrintStream: void println()>();
        return;
    }

    private final void displayIndustryMap()
    {
        com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI this;
        int i, temp$1, temp$11, temp$12;
        java.util.HashMap temp$0, temp$6;
        java.lang.String stringToInsert, temp$3, temp$9, temp$10;
        java.lang.StringBuffer temp$2, temp$5;
        java.io.PrintStream temp$4, temp$13;
        java.lang.Integer temp$7;
        java.lang.Object temp$8;

        this := @this: com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI;
        i = 0;

     label0:
        nop;
        temp$0 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap industryMap>;
        temp$1 = virtualinvoke temp$0.<java.util.HashMap: int size()>();
        if i < temp$1 goto label1;

        goto label4;

     label1:
        nop;
        stringToInsert = " : ";
        if i < 10 goto label2;

        goto label3;

     label2:
        nop;
        temp$2 = new java.lang.StringBuffer;
        specialinvoke temp$2.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(" ");
        virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(stringToInsert);
        temp$3 = virtualinvoke temp$2.<java.lang.StringBuffer: java.lang.String toString()>();
        stringToInsert = temp$3;

     label3:
        nop;
        temp$4 = <java.lang.System: java.io.PrintStream out>;
        temp$5 = new java.lang.StringBuffer;
        specialinvoke temp$5.<java.lang.StringBuffer: void <init>()>();
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("Industry code ");
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i);
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(stringToInsert);
        temp$6 = this.<com.riskIt.ui.IncomeByOccupationOrIndustryCodeUI: java.util.HashMap industryMap>;
        temp$7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i);
        temp$8 = virtualinvoke temp$6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(temp$7);
        temp$9 = (java.lang.String) temp$8;
        virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(temp$9);
        temp$10 = virtualinvoke temp$5.<java.lang.StringBuffer: java.lang.String toString()>();
        virtualinvoke temp$4.<java.io.PrintStream: void println(java.lang.String)>(temp$10);
        nop;
        temp$11 = i;
        temp$12 = temp$11 + 1;
        i = temp$12;
        goto label0;

     label4:
        nop;
        temp$13 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke temp$13.<java.io.PrintStream: void println()>();
        return;
    }
}
